#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Practice_LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PharosLimits")]
	public partial class PracticeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUtilization(Utilization instance);
    partial void UpdateUtilization(Utilization instance);
    partial void DeleteUtilization(Utilization instance);
    partial void InsertSignup_Transaction(Signup_Transaction instance);
    partial void UpdateSignup_Transaction(Signup_Transaction instance);
    partial void DeleteSignup_Transaction(Signup_Transaction instance);
    partial void Insertcomputer(computer instance);
    partial void Updatecomputer(computer instance);
    partial void Deletecomputer(computer instance);
    partial void Insertcomputer_group(computer_group instance);
    partial void Updatecomputer_group(computer_group instance);
    partial void Deletecomputer_group(computer_group instance);
    #endregion
		
		public PracticeDataContext() : 
				base(global::Practice_LINQ.Properties.Settings.Default.PharosLimitsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PracticeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PracticeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PracticeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PracticeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Utilization> Utilizations
		{
			get
			{
				return this.GetTable<Utilization>();
			}
		}
		
		public System.Data.Linq.Table<time_used> time_useds
		{
			get
			{
				return this.GetTable<time_used>();
			}
		}
		
		public System.Data.Linq.Table<Signup_Transaction> Signup_Transactions
		{
			get
			{
				return this.GetTable<Signup_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<computer> computers
		{
			get
			{
				return this.GetTable<computer>();
			}
		}
		
		public System.Data.Linq.Table<computer_group> computer_groups
		{
			get
			{
				return this.GetTable<computer_group>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilization")]
	public partial class Utilization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _user_id;
		
		private string _computer_id;
		
		private int _duration;
		
		private string _time_stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void Oncomputer_idChanging(string value);
    partial void Oncomputer_idChanged();
    partial void OndurationChanging(int value);
    partial void OndurationChanged();
    partial void Ontime_stampChanging(string value);
    partial void Ontime_stampChanged();
    #endregion
		
		public Utilization()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string computer_id
		{
			get
			{
				return this._computer_id;
			}
			set
			{
				if ((this._computer_id != value))
				{
					this.Oncomputer_idChanging(value);
					this.SendPropertyChanging();
					this._computer_id = value;
					this.SendPropertyChanged("computer_id");
					this.Oncomputer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Int NOT NULL")]
		public int duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_stamp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string time_stamp
		{
			get
			{
				return this._time_stamp;
			}
			set
			{
				if ((this._time_stamp != value))
				{
					this.Ontime_stampChanging(value);
					this.SendPropertyChanging();
					this._time_stamp = value;
					this.SendPropertyChanged("time_stamp");
					this.Ontime_stampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.time_used")]
	public partial class time_used
	{
		
		private string _user_id;
		
		private short _computer_group_id;
		
		private short _minutes;
		
		private string _time_limit_group;
		
		private bool _isActive;
		
		private string _last_update_time;
		
		public time_used()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this._user_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_group_id", DbType="SmallInt NOT NULL")]
		public short computer_group_id
		{
			get
			{
				return this._computer_group_id;
			}
			set
			{
				if ((this._computer_group_id != value))
				{
					this._computer_group_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minutes", DbType="SmallInt NOT NULL")]
		public short minutes
		{
			get
			{
				return this._minutes;
			}
			set
			{
				if ((this._minutes != value))
				{
					this._minutes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_limit_group", DbType="VarChar(50)")]
		public string time_limit_group
		{
			get
			{
				return this._time_limit_group;
			}
			set
			{
				if ((this._time_limit_group != value))
				{
					this._time_limit_group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this._isActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="VarChar(50)")]
		public string last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this._last_update_time = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Signup_Transactions")]
	public partial class Signup_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_id;
		
		private System.Nullable<int> _computer_id;
		
		private string _computer_name;
		
		private string _computer_group;
		
		private int _session_duration;
		
		private string _session_start;
		
		private int _session_endtype;
		
		private int _reservation_type;
		
		private string _timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void Oncomputer_idChanging(System.Nullable<int> value);
    partial void Oncomputer_idChanged();
    partial void Oncomputer_nameChanging(string value);
    partial void Oncomputer_nameChanged();
    partial void Oncomputer_groupChanging(string value);
    partial void Oncomputer_groupChanged();
    partial void Onsession_durationChanging(int value);
    partial void Onsession_durationChanged();
    partial void Onsession_startChanging(string value);
    partial void Onsession_startChanged();
    partial void Onsession_endtypeChanging(int value);
    partial void Onsession_endtypeChanged();
    partial void Onreservation_typeChanging(int value);
    partial void Onreservation_typeChanged();
    partial void OntimestampChanging(string value);
    partial void OntimestampChanged();
    #endregion
		
		public Signup_Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_id", DbType="Int")]
		public System.Nullable<int> computer_id
		{
			get
			{
				return this._computer_id;
			}
			set
			{
				if ((this._computer_id != value))
				{
					this.Oncomputer_idChanging(value);
					this.SendPropertyChanging();
					this._computer_id = value;
					this.SendPropertyChanged("computer_id");
					this.Oncomputer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string computer_name
		{
			get
			{
				return this._computer_name;
			}
			set
			{
				if ((this._computer_name != value))
				{
					this.Oncomputer_nameChanging(value);
					this.SendPropertyChanging();
					this._computer_name = value;
					this.SendPropertyChanged("computer_name");
					this.Oncomputer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_group", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string computer_group
		{
			get
			{
				return this._computer_group;
			}
			set
			{
				if ((this._computer_group != value))
				{
					this.Oncomputer_groupChanging(value);
					this.SendPropertyChanging();
					this._computer_group = value;
					this.SendPropertyChanged("computer_group");
					this.Oncomputer_groupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_duration", DbType="Int NOT NULL")]
		public int session_duration
		{
			get
			{
				return this._session_duration;
			}
			set
			{
				if ((this._session_duration != value))
				{
					this.Onsession_durationChanging(value);
					this.SendPropertyChanging();
					this._session_duration = value;
					this.SendPropertyChanged("session_duration");
					this.Onsession_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_start", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string session_start
		{
			get
			{
				return this._session_start;
			}
			set
			{
				if ((this._session_start != value))
				{
					this.Onsession_startChanging(value);
					this.SendPropertyChanging();
					this._session_start = value;
					this.SendPropertyChanged("session_start");
					this.Onsession_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_endtype", DbType="Int NOT NULL")]
		public int session_endtype
		{
			get
			{
				return this._session_endtype;
			}
			set
			{
				if ((this._session_endtype != value))
				{
					this.Onsession_endtypeChanging(value);
					this.SendPropertyChanging();
					this._session_endtype = value;
					this.SendPropertyChanged("session_endtype");
					this.Onsession_endtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservation_type", DbType="Int NOT NULL")]
		public int reservation_type
		{
			get
			{
				return this._reservation_type;
			}
			set
			{
				if ((this._reservation_type != value))
				{
					this.Onreservation_typeChanging(value);
					this.SendPropertyChanging();
					this._reservation_type = value;
					this.SendPropertyChanged("reservation_type");
					this.Onreservation_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.computers")]
	public partial class computer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _computer_id;
		
		private string _computer_name;
		
		private short _computer_group_id;
		
		private bool _admin_override;
		
		private EntityRef<computer_group> _computer_group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomputer_idChanging(short value);
    partial void Oncomputer_idChanged();
    partial void Oncomputer_nameChanging(string value);
    partial void Oncomputer_nameChanged();
    partial void Oncomputer_group_idChanging(short value);
    partial void Oncomputer_group_idChanged();
    partial void Onadmin_overrideChanging(bool value);
    partial void Onadmin_overrideChanged();
    #endregion
		
		public computer()
		{
			this._computer_group = default(EntityRef<computer_group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short computer_id
		{
			get
			{
				return this._computer_id;
			}
			set
			{
				if ((this._computer_id != value))
				{
					this.Oncomputer_idChanging(value);
					this.SendPropertyChanging();
					this._computer_id = value;
					this.SendPropertyChanged("computer_id");
					this.Oncomputer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string computer_name
		{
			get
			{
				return this._computer_name;
			}
			set
			{
				if ((this._computer_name != value))
				{
					this.Oncomputer_nameChanging(value);
					this.SendPropertyChanging();
					this._computer_name = value;
					this.SendPropertyChanged("computer_name");
					this.Oncomputer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_group_id", DbType="SmallInt NOT NULL")]
		public short computer_group_id
		{
			get
			{
				return this._computer_group_id;
			}
			set
			{
				if ((this._computer_group_id != value))
				{
					if (this._computer_group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncomputer_group_idChanging(value);
					this.SendPropertyChanging();
					this._computer_group_id = value;
					this.SendPropertyChanged("computer_group_id");
					this.Oncomputer_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_override", DbType="Bit NOT NULL")]
		public bool admin_override
		{
			get
			{
				return this._admin_override;
			}
			set
			{
				if ((this._admin_override != value))
				{
					this.Onadmin_overrideChanging(value);
					this.SendPropertyChanging();
					this._admin_override = value;
					this.SendPropertyChanged("admin_override");
					this.Onadmin_overrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="computer_group_computer", Storage="_computer_group", ThisKey="computer_group_id", OtherKey="computer_group_id", IsForeignKey=true)]
		public computer_group computer_group
		{
			get
			{
				return this._computer_group.Entity;
			}
			set
			{
				computer_group previousValue = this._computer_group.Entity;
				if (((previousValue != value) 
							|| (this._computer_group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._computer_group.Entity = null;
						previousValue.computers.Remove(this);
					}
					this._computer_group.Entity = value;
					if ((value != null))
					{
						value.computers.Add(this);
						this._computer_group_id = value.computer_group_id;
					}
					else
					{
						this._computer_group_id = default(short);
					}
					this.SendPropertyChanged("computer_group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.computer_groups")]
	public partial class computer_group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _computer_group_id;
		
		private string _computer_group1;
		
		private short _age_min;
		
		private short _age_max;
		
		private short _user_time_limit;
		
		private System.Nullable<short> _user_group_id;
		
		private string _time_limit_group;
		
		private EntitySet<computer> _computers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomputer_group_idChanging(short value);
    partial void Oncomputer_group_idChanged();
    partial void Oncomputer_group1Changing(string value);
    partial void Oncomputer_group1Changed();
    partial void Onage_minChanging(short value);
    partial void Onage_minChanged();
    partial void Onage_maxChanging(short value);
    partial void Onage_maxChanged();
    partial void Onuser_time_limitChanging(short value);
    partial void Onuser_time_limitChanged();
    partial void Onuser_group_idChanging(System.Nullable<short> value);
    partial void Onuser_group_idChanged();
    partial void Ontime_limit_groupChanging(string value);
    partial void Ontime_limit_groupChanged();
    #endregion
		
		public computer_group()
		{
			this._computers = new EntitySet<computer>(new Action<computer>(this.attach_computers), new Action<computer>(this.detach_computers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computer_group_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short computer_group_id
		{
			get
			{
				return this._computer_group_id;
			}
			set
			{
				if ((this._computer_group_id != value))
				{
					this.Oncomputer_group_idChanging(value);
					this.SendPropertyChanging();
					this._computer_group_id = value;
					this.SendPropertyChanged("computer_group_id");
					this.Oncomputer_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="computer_group", Storage="_computer_group1", DbType="VarChar(50)")]
		public string computer_group1
		{
			get
			{
				return this._computer_group1;
			}
			set
			{
				if ((this._computer_group1 != value))
				{
					this.Oncomputer_group1Changing(value);
					this.SendPropertyChanging();
					this._computer_group1 = value;
					this.SendPropertyChanged("computer_group1");
					this.Oncomputer_group1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age_min", DbType="SmallInt NOT NULL")]
		public short age_min
		{
			get
			{
				return this._age_min;
			}
			set
			{
				if ((this._age_min != value))
				{
					this.Onage_minChanging(value);
					this.SendPropertyChanging();
					this._age_min = value;
					this.SendPropertyChanged("age_min");
					this.Onage_minChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age_max", DbType="SmallInt NOT NULL")]
		public short age_max
		{
			get
			{
				return this._age_max;
			}
			set
			{
				if ((this._age_max != value))
				{
					this.Onage_maxChanging(value);
					this.SendPropertyChanging();
					this._age_max = value;
					this.SendPropertyChanged("age_max");
					this.Onage_maxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_time_limit", DbType="SmallInt NOT NULL")]
		public short user_time_limit
		{
			get
			{
				return this._user_time_limit;
			}
			set
			{
				if ((this._user_time_limit != value))
				{
					this.Onuser_time_limitChanging(value);
					this.SendPropertyChanging();
					this._user_time_limit = value;
					this.SendPropertyChanged("user_time_limit");
					this.Onuser_time_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_group_id", DbType="SmallInt")]
		public System.Nullable<short> user_group_id
		{
			get
			{
				return this._user_group_id;
			}
			set
			{
				if ((this._user_group_id != value))
				{
					this.Onuser_group_idChanging(value);
					this.SendPropertyChanging();
					this._user_group_id = value;
					this.SendPropertyChanged("user_group_id");
					this.Onuser_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_limit_group", DbType="VarChar(50)")]
		public string time_limit_group
		{
			get
			{
				return this._time_limit_group;
			}
			set
			{
				if ((this._time_limit_group != value))
				{
					this.Ontime_limit_groupChanging(value);
					this.SendPropertyChanging();
					this._time_limit_group = value;
					this.SendPropertyChanged("time_limit_group");
					this.Ontime_limit_groupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="computer_group_computer", Storage="_computers", ThisKey="computer_group_id", OtherKey="computer_group_id")]
		public EntitySet<computer> computers
		{
			get
			{
				return this._computers;
			}
			set
			{
				this._computers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_computers(computer entity)
		{
			this.SendPropertyChanging();
			entity.computer_group = this;
		}
		
		private void detach_computers(computer entity)
		{
			this.SendPropertyChanging();
			entity.computer_group = null;
		}
	}
}
#pragma warning restore 1591
